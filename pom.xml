<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.camunda.bpm.cockpit.plugin</groupId>
	<artifactId>cockpit-acm-plugin</artifactId>
	<version>1.2-SNAPSHOT</version>
	<packaging>${packaging.type}</packaging>
	<name>cockpit-acm-plugin</name>
	<description>This plugin provides information about case definitions and case instances deployed into Camunda BPM. It seamless integrates into Cockpit in the same way, as the corresponding process definition/instance pages.</description>

	<parent>
		<groupId>org.camunda</groupId>
		<artifactId>camunda-release-parent</artifactId>
		<version>3.7</version>
		<!-- do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 -->
		<relativePath />
	</parent>

	<properties>
		<plugin-name>acm-plugin</plugin-name>
		<camunda-version>7.2.0</camunda-version>
		<yeomanProjectDirectory>yo</yeomanProjectDirectory>
		<yeomanTargetDirectory>${basedir}/target/${project.artifactId}-${project.version}</yeomanTargetDirectory>
		<yeomanGruntTargetDir>${basedir}/target/yo</yeomanGruntTargetDir>

		<!-- This property must be present for the pom.xml to be recognized as a plugin -->
		<camunda.plugin.category>Case Management</camunda.plugin.category>

		<camunda.plugin.screenshot>screenshots/plugin-instance-taskOverview.png</camunda.plugin.screenshot>
		<camunda.plugin.testedOnVersion>7.2.0</camunda.plugin.testedOnVersion>
		<camunda.plugin.language>EN</camunda.plugin.language>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.camunda.bpm.webapp</groupId>
			<artifactId>camunda-webapp-core</artifactId>
			<version>${camunda-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine</artifactId>
			<version>${camunda-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<type>pom</type>
			<scope>provided</scope>
			<version>3.0.2.Final</version>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.171</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.5</version>
			<scope>test</scope>
		</dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

	</dependencies>
	<build>
		<defaultGoal>clean install</defaultGoal>
	</build>

	<profiles>
		<profile>
			<!--
                This profile is used to build the
            // -->
			<id>plugin</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
			</properties>
		</profile>

		<profile>
			<id>webapp</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<!-- A web.xml is no longer required. -->
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<!-- Add static content (AngularJS app) -->
							<webResources>
								<resource>
									<!-- this is relative to the pom.xml directory -->
									<directory>${yeomanGruntTargetDir}</directory>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.github.trecloux</groupId>
						<artifactId>yeoman-maven-plugin</artifactId>
						<version>0.2</version>
						<executions>
							<execution>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>${yeomanGruntTargetDir}</directory>
								</fileset>
								<fileset>
									<directory>${yeomanProjectDirectory}/.tmp</directory>
								</fileset>
								<fileset>
									<directory>${yeomanProjectDirectory}/bower_components</directory>
								</fileset>
								<fileset>
									<directory>${yeomanProjectDirectory}/node_modules</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.3.2</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<executable>bower</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
							<workingDirectory>${basedir}/${yeomanProjectDirectory}</workingDirectory>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${yeomanTargetDirectory}</outputDirectory>
									<resources>
										<resource>
											<directory>${yeomanGruntTargetDir}</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:git@github.com:camunda/camunda-acm-plugin.git</connection>
		<url>scm:git:git@github.com:camunda/camunda-acm-plugin.git</url>
		<developerConnection>scm:git:git@github.com:camunda/camunda-acm-plugin.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!-- repositories used for distribution of releases and snapshots, DO NOT CHANGE -->
	<distributionManagement>
		<repository>
			<id>camunda-nexus</id>
			<name>camunda bpm community extensions</name>
			<url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-community-extensions</url>
		</repository>
		<snapshotRepository>
			<id>camunda-nexus</id>
			<name>camunda bpm community extensions snapshots</name>
			<url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-community-extensions-snapshots</url>
			<!-- for maven 2 compatibility -->
			<uniqueVersion>true</uniqueVersion>
		</snapshotRepository>
	</distributionManagement>


	<!-- remove once https://github.com/camunda/camunda-acm-plugin/issues/9 is fixed -->
	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>camunda-bpm-nexus</name>
			<url>https://app.camunda.com/nexus/content/groups/public</url>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>community-action-maven-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
								<execution>
										<id>sign-artifacts</id>
										<phase>verify</phase>
										<goals>
												<goal>sign</goal>
										</goals>
								</execution>
						</executions>
						<configuration>
								<!-- Prevent gpg from using pinentry programs -->
								<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
								</gpgArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
